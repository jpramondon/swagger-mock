{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Heroes",
    "description": "Demo Swagger Mock with Heroes"
  },
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "hero": {
      "required": [
        "name",
        "gender"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 4
        },
        "gender": {
          "type": "string",
          "enum": [
            "man",
            "woman",
            "unknown"
          ]
        },
        "powers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "heroName": {
      "name": "heroName",
      "in": "path",
      "description": "Name of the hero",
      "required": true,
      "type": "string"
    }
  },
  "paths": {
    "/heroes": {
      "get": {
        "description": "Returns all heroes, optionally filtered by gender or sorted by name",
        "operationId": "findHeroes",
        "parameters": [
          {
            "name": "gender",
            "in": "query",
            "description": "Filters heroes by gender (man, woman, unknown)",
            "required": false,
            "type": "string",
            "enum": [
              "man",
              "woman",
              "unknown"
            ]
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by name asc or desc",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        ],
        "responses": {
          "default": {
            "description": "Returns the matching heroes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hero"
              }
            },
            "headers": {
              "last-modified": {
                "type": "string",
                "description": "The date/time that a pet was last modified"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes all heroes, optionally filtered by gender",
        "operationId": "deleteHeroes",
        "parameters": [
          {
            "name": "gender",
            "in": "query",
            "description": "Filters heroes by gender (man, woman, unknown)",
            "required": false,
            "type": "string",
            "enum": [
              "man",
              "woman",
              "unknown"
            ]
          }
        ],
        "responses": {
          "default": {
            "description": "Returns the matching heroes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hero"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new hero in the store",
        "operationId": "addHero",
        "parameters": [
          {
            "name": "hero",
            "in": "body",
            "description": "The hero to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly-added hero",
            "schema": {
              "$ref": "#/definitions/hero"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL of the newly-added hero"
              }
            }
          }
        }
      }
    },
    "/heroes/{heroName}": {
      "parameters": [
        {
          "$ref": "#/parameters/heroName"
        }
      ],
      "get": {
        "description": "Returns a hero by name",
        "operationId": "findHeroByName",
        "responses": {
          "default": {
            "description": "Returns the hero data",
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a single hero based on the name supplied",
        "operationId": "deleteHero",
        "responses": {
          "default": {
            "description": "Returns the hero that was deleted",
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        }
      },
      "patch": {
        "description": "Updates a hero by name",
        "parameters": [
          {
            "name": "pet",
            "in": "body",
            "description": "The updated hero info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns the updated hero data",
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        }
      }
    }
  }
}